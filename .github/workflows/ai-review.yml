name: AI Code Review

on:
  push: { branches: [ main, master ] }
  pull_request: { branches: [ main, master ] }

jobs:
  review:
    runs-on: ubuntu-latest
    permissions: { contents: read, pull-requests: write }
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - run: pip install -r requirements.txt

      - name: Compute DIFF SHAs
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "BASE=${{ github.event.pull_request.base.sha }}" >> $GITHUB_ENV
            echo "HEAD=${{ github.sha }}" >> $GITHUB_ENV
          else
            if [ -z "${{ github.event.before }}" ] || [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
              git rev-parse HEAD~1 >/dev/null 2>&1 && echo "BASE=$(git rev-parse HEAD~1)" >> $GITHUB_ENV || echo "BASE=${{ github.sha }}" >> $GITHUB_ENV
            else
              echo "BASE=${{ github.event.before }}" >> $GITHUB_ENV
            fi
            echo "HEAD=${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: Run AI reviewer
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
          OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
          LLM_API_KEY: ${{ secrets.LLM_API_KEY }}
          LLM_API_BASE: ${{ secrets.LLM_API_BASE }}
        run: python -m src.reviewer --base "$BASE" --head "$HEAD"

      - uses: actions/upload-artifact@v4
        with:
          name: ai_review_report
          path: ai_review_report.md
          if-no-files-found: warn

      - name: Run Git Insights
        run: python -m project.cli --limit 100 --out insights.json || echo "Git Insights failed"

      - uses: actions/upload-artifact@v4
        with:
          name: git_insights
          path: insights.json
          if-no-files-found: warn

      - if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('ai_review_report.md','utf8');
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
